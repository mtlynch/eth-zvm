#!/usr/bin/env bash

# Exit on first failure.
set -e

# Exit on unset variable.
set -u

# Fail when piped commands fail.
set -o pipefail

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
readonly SCRIPT_DIR
cd "${SCRIPT_DIR}/.."

readonly TESTDATA_FOLDER="testdata"

mkdir -p "${TESTDATA_FOLDER}/bytecode"

readonly MNEMONIC_EXTENSION='.mnemonic'

pushd "${TESTDATA_FOLDER}"

test_files=()
for file in *; do
  # Check if the file is a regular file
  if [[ -f "${file}" ]]; then
      filename="$(basename "${file}" "${MNEMONIC_EXTENSION}")"
      test_files+=("$filename")
  fi
done

popd

readonly GENERATED_TESTS_FOLDER="${TESTDATA_FOLDER}/generated"
mkdir -p "${GENERATED_TESTS_FOLDER}"
pushd "${GENERATED_TESTS_FOLDER}"

TEST_NAME="count-to-1k-by-1"

FILENAME="${TEST_NAME}${MNEMONIC_EXTENSION}"
if [[ -f "${FILENAME}" ]]; then
  rm "${FILENAME}"
fi

for ((i=1; i<=1000; i++)); do
    echo "PUSH1 0x01" >> "${FILENAME}"
done

for ((i=1; i<=999; i++)); do
    echo "ADD" >> "${FILENAME}"
done

cat >> "${FILENAME}" << EOL
PUSH1 0x00
MSTORE
PUSH1 0x20
PUSH1 0x00
RETURN
EOL


test_files+=("generated/${TEST_NAME}")


TEST_NAME="count-to-100k-by-1"

FILENAME="${TEST_NAME}${MNEMONIC_EXTENSION}"
if [[ -f "${FILENAME}" ]]; then
  rm "${FILENAME}"
fi

rm "${FILENAME}" || true
touch "${FILENAME}"

echo "PUSH1 0x01" >> "${FILENAME}"
for ((i=1; i<=99999; i++)); do
    echo "PUSH1 0x01" >> "${FILENAME}"
    echo "ADD" >> "${FILENAME}"
done

cat >> "${FILENAME}" << EOL
PUSH1 0x00
MSTORE
PUSH1 0x20
PUSH1 0x00
RETURN
EOL

test_files+=("generated/${TEST_NAME}")

popd

for test_name in "${test_files[@]}"; do
  input_file="${TESTDATA_FOLDER}/${test_name}${MNEMONIC_EXTENSION}"
  output_file="${TESTDATA_FOLDER}/bytecode/$(basename "${test_name}").bytecode"
  ./zig-out/bin/mnc "${input_file}" "${output_file}"
done
